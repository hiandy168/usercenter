<?php

class CalendarController extends FrontController
{
    public $memInfo;
    public $param;
    public $openid;
    public $activitytype;
    public $datatime;
    public $datatimes;
    public $mid;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $this->param = '';
        if (!$this->member['id']) {
            $this->redirect('/h5/member/login');
        }

        $this->activitytype = array(
            1 => array("签到", "pccheckin", "pccheckin"),
            2 => array("刮刮卡", "scratchcard", "scratch"),
           // 3 => array("报名", "signup", "signup"),
            3 => array("投票", "vote", "vote"),
            4 => array("大转盘", "bigwheel", "bigwheel"),
            5 => array("海报", "poster", "poster"),

        );

        $this->datatime = strtotime(date('Y-m-d'));
        $this->datatimes = strtotime(date('Y-m-d', strtotime('+1 day')));
        $this->mid = $this->member['id'];

    }


    //我的日历
    public function actionIndex()
    {
        $time = time();

        //推荐活动
        $sql = "SELECT * FROM dym_activity_recommend WHERE status=1  ORDER BY createtime DESC LIMIT 3";
        $model = Mod::app()->db->createCommand($sql)->queryAll();
        foreach ($model as $k => $v) {
            $model[$k]['url'] = CITY_CALENDAR_URL . urlencode('http://' . $_SERVER['HTTP_HOST'] . '/activity/' . $this->activitytype[$v['type']][1] . '/view/id/' . $v['aid'] . $this->param);
            $model[$k]['image'] = JkCms::show_img($v['image']);
        }

        //-------------------

        //我当天参加的活动
        $list = $this->actionmyactivity();

        //我的记事
        $sql = "SELECT * FROM dym_notepad WHERE remind>" . $this->datatime . " and remind<" . $this->datatimes . " AND mid=" . $this->member['id'] . " order by remind desc";
        $signup = Mod::app()->db->createCommand($sql)->queryAll();
        /*if($signup){
            foreach($signup as $key=>$val){
                $res=intval($val['remind'])-intval($time);
                if($res>=0){
                    $arr[$key]=$res;
                }

            }
            $a=min($arr);
            foreach($arr as $k=>$v){
                if($a==$v){
                    $result=$signup[$k];
                }
            }
        }*/


        $data = array(
            'cates' => "",
            'member' => $this->memInfo,
            'param' => $this->param,
            'recommend' => $model,
            'activitylist' => $list,
            'signup' => $signup,
            'config' => array('site_title' => '城市日历'),

        );


        $this->render('index', $data);
    }

    /*我当月参加的活动标记*/
    public function actionmonthtag()
    {
        $yers = Tool::getValidParam('year');
        $month = Tool::getValidParam('month');
        $day = Tool::getValidParam('day');
        $time = strtotime($yers . '/' . $month . '/' . $day);
        $arr = $this->actionmFristAndLastTime($time);
        $model = $this->actionmyactivity($arr['firsttime'], $arr['lasttime']);
        $data=array();
        if(is_array($model)) {
            foreach ($model as $k => $v) {
                $datetime = strtotime(date('Y-m-d', $v['createtime']));
                unset($model[$k]['createtime']);
                $da[$k]['createtime'] = $datetime;
                $va[] = join(",", $da[$k]);
                $temp = $va;
            }
        }
        if (is_array($temp)) {
            $temp = array_unique($temp);
            foreach ($temp as $k => $v) {
                $array = explode(",", $v);
                $data[]['createtime'] = $array[0];   //再将拆开的数组重新组装
            }
        }

        echo json_encode($data);
        exit;
    }

    /**
     *
     * 获取指定年月的开始和结束时间戳
     *
     * @param int $time 当月任意时间戳
     * @return array(开始时间,结束时间)
     */
    function actionmFristAndLastTime($time = 0)
    {
        $time = $time ? $time : time();
        $y = date('Y', $time);
        $m = date('m', $time);
        $d = date('t', $time);
        return array("firsttime" => mktime(0, 0, 0, $m, 1, $y), "lasttime" => mktime(23, 59, 59, $m, $d, $y));
    }

    /*查询我当天参加的活动，记事 日历*/
    public function actioncurl()
    {

        $yers =trim( Tool::getValidParam('year'));
        $month =trim( Tool::getValidParam('month'));
        $day =trim( Tool::getValidParam('day'));
        $time = strtotime($yers . '/' . $month . '/' . $day);
        if (!$day || !$month || !$yers) {
            echo 'parameter error';
            exit;
        }

        //农历接口
        $ch = curl_init();
        $url = 'http://apis.baidu.com/netpopo/huangli/date?year=' . $yers . '&month=' . $month . '&day=' . $day;
        $header = array(
            'apikey: 817c280063792162e0706d5f249685d3',
        );
        // 添加apikey到header
        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        // 执行HTTP请求
        curl_setopt($ch, CURLOPT_URL, $url);
        $res = curl_exec($ch);

        //我的记事
        $sql = "SELECT * FROM dym_notepad WHERE remind>" . $time . " and remind<" . ($time + 86400) . " AND mid=" . $this->member['id'] . " order by remind desc";
        $signup = Mod::app()->db->createCommand($sql)->queryAll();
        foreach ($signup as $key => $val) {
            $signup[$key]['jointime'] = date('Y-m-d H:i:s', $val['remind']);
        }
        $signup[0]['code'] = $signup ? 1 : 2;
        /*  if($signup){
              foreach($signup as $key=>$val){
                  $res=intval($val['remind'])-intval(time());
                  if($res>=0){
                      $result= $signup[$key];
                      break;
                  }
              }
          }
          $signup['reminds'] = date("H:i",$result['remind']);
          $signup['title'] = $result['title'];*/

        //我的活动

        $model = $this->actionmyactivity($time, ($time + 86400));

        $model[0]['code'] = $model ? 1 : 2;
        //组合数据
        $data[0] = json_decode($res, true);//农历信息
        $data[1] = $signup;//我的记事
        $data[2] = $model;//我的活动
        echo json_encode($data);
        exit;
    }

    public function actionmyactivity($joindate = null, $joindateend = null)
    {
        // echo $joindate."===".$joindateend;
        $joindate = $joindate ? $joindate : $this->datatime;
        $joindateend = $joindateend ? $joindateend : $this->datatimes;
        $sql = "SELECT `type`,`tablename`,`aid`,`pid`,createtime FROM {{member_behavior}} WHERE mid = '" . $this->mid . "' AND createtime>$joindate AND createtime<$joindateend GROUP BY `tablename`,`aid`,`type` ,`pid`,`createtime`";
        //  echo $sql;
        $list = Mod::app()->db->createCommand($sql)->queryAll();
        foreach ($list as $key => $values) {
            if ($values['tablename'] == "" || $values['tablename'] == "null") {
                unset($list[$key]);
            } else {
                $sql = " SELECT * FROM {{" . $values['tablename'] . "}} WHERE id = " . $values['aid'];
                $res = Mod::app()->db->createCommand($sql)->queryRow();

                //点击数
                $sql = " SELECT * FROM {{activity_click}} WHERE aid = " . $values['aid'] . " AND pid=" . $values['pid'];
                $pv = Mod::app()->db->createCommand($sql)->queryRow();


                //查询pid 属于哪个应用
                $project = Project::model()->findByPk($values['pid']);

                //根据表明查询控制器名字
                foreach ($this->activitytype as $val) {
                    $re = in_array(str_replace('activity_', "", $values['tablename']), $val);
                    if ($re) {
                        $function = $val[1];
                        $types = $val[0];
                        break;
                    }
                }
                if ($res) {
                    if ($values['tablename'] == "activity_poster") {
                        $list[$key]['type'] = $types;
                        $list[$key]['aid'] = $values['aid'];
                        $list[$key]['title'] = $res['title'];
                        $list[$key]['start_time'] = $res['starttime'];
                        $list[$key]['end_time'] = $res['endtime'];
                        $list[$key]['jointime'] = date("Y-m-d H:i:s", $values['createtime']);
                        $list[$key]['img'] = $res['share_img'];
                    } else {
                        $list[$key]['type'] = $types;
                        $list[$key]['aid'] = $values['aid'];
                        $list[$key]['title'] = $res['title'];
                        $list[$key]['describe'] = $res['desc'];
                        $list[$key]['start_time'] = $res['start_time'];
                        $list[$key]['end_time'] = $res['end_time'];
                        $list[$key]['jointime'] = date("Y-m-d H:i:s", $values['createtime']);
                        $list[$key]['pv'] = $pv['pv'];
                        $list[$key]['uv'] = $pv['uv'];
                        $list[$key]['img'] = $res['share_img'] ? $res['share_img'] : $res['img'];
                        $list[$key]['url'] = 'http://' . $_SERVER['HTTP_HOST'] . '/activity/' . $function . '/view/id/' . $values['aid'];

                    }

                } else {
                    unset($list[$key]);
                }
            }
        }
        if (is_array($list) && !empty($list)) {
            foreach ($list as $k => $v) {
                $data[] = $v;
            }
        } else {
            $data = array();
        }

        return $data;
    }

}